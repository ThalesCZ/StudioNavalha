<!doctype html>
<html lang="pt">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Agendamento Online</title>
    <link href="https://fonts.googleapis.com/css2?family=Bebas+Neue&family=Kanit:wght@200;400;700&family=Oswald:wght@200..700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="css/agendamento.css">
    <link href="https://cdn.jsdelivr.net/npm/pg-calendar@1.4.31/dist/css/pignose.calendar.min.css" rel="stylesheet">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poetsen+One&display=swap" rel="stylesheet">
</head>
<body>
    <div class="topo">
        <button id="menu-button" class="menu-button">☰</button>
        <div class="menu-content">
            <button class="return" id="back-to-home" style="cursor: pointer;">VOLTAR PARA O INICIO</button>
            <img class="logo" src="images/logo.png" alt="Logo">
            <button class="myagend" style="cursor: pointer;">MEUS AGENDAMENTOS</button>
        </div>
    </div>
    
    <div class="container">
        <div class="left-panel">
            <h1>Agende seu Horário Agora</h1>
            <h2 style="margin-top: 0; margin-bottom: 0;">Serviços Disponíveis</h2>
            <ul>
                <% servicos.forEach(servico => { %>
                    <li>
                        <%= servico.descricao %> - <%= servico.duracao %> minutos - R$ <%= servico.preco.toFixed(2) %>
                    </li>
                <% }); %>
            </ul>
            <form action="/agendar" method="post">
                <div class="form-group">
                    <label for="service">Selecione um serviço:</label>
                    <select id="service" name="servicoId" class="form-control">
                        <% servicos.forEach(servico => { %>
                            <option value="<%= servico.id %>"><%= servico.descricao %></option>
                        <% }); %>
                    </select>
                </div>
    
                <div class="form-group">
                    <label for="employee">Selecione um Barbeiro:</label>
                    <select id="employee" name="barbeiroId" class="form-control">   
                        <% barbeiros.forEach(barbeiro => { %>
                            <option value="<%= barbeiro.id %>"><%= barbeiro.nome %></option>
                        <% }); %>
                    </select>
                </div>
    
                <div class="right-panel">
                    <div id="calendar-container">
                        <div id="calendar-header">
                            <button id="prev-month" type="button">&#10094;</button>
                            <h2 id="month-year"></h2>
                            <button id="next-month" type="button">&#10095;</button>
                        </div>
                        <table id="calendar">
                            <thead>
                                <tr>
                                    <th>D</th>
                                    <th>S</th>
                                    <th>T</th>
                                    <th>Q</th>
                                    <th>Q</th>
                                    <th>S</th>
                                    <th>S</th>
                                </tr>
                            </thead>
                            <tbody id="calendar-body">
                            </tbody>
                        </table>
                    </div>
                    <label for="appointment-date" style="margin-top: 1.2em;">Data:</label>
                    <input type="string" id="appointment-date" class="form-control" style="cursor: not-allowed;" readonly>

                    <label for="appointment-time" style="margin-top: 1.2em;">Horário:</label>
                    <div id="loading-indicator" style="display: none; color: red;">Carregando horários...</div>

                    <select id="time-options" name="appointment-time" class="form-control"></select>

                    <input type="hidden" id="appointment-datetime" name="dataHora">

                    <button type="button" id="schedule-button" class="confirm">AGENDAR</button>

                    <!-- Modal de confirmação -->

                    <div id="confirmation-modal" class="modal">
                        <div class="modal-content">
                            <span class="close">&times;</span>
                            <h2>Confirmar Agendamento</h2>
                            <p>Barbeiro: <span id="selected-barber"></span></p>
                            <p>Serviço: <span id="selected-service"></span></p>
                            <p>Data: <span id="selected-date"></span></p>
                            <p>Hora: <span id="selected-time"></span></p>
                            <button id="confirm-button">Confirmar</button>
                            <button id="cancel-button" type="button">Cancelar</button>
                        </div>
                    </div>
                    
            </form>
        </div>
    </div>
</div>

<script>
    function getHolidays(year) {
    return [
        new Date(year, 0, 1),  // Ano-Novo
        new Date(year, 0, 1),  // Dia da Confraternização Universal
        new Date(year, 1, 12), // Carnaval (segunda-feira)
        new Date(year, 1, 13), // Carnaval (terça-feira)
        new Date(year, 1, 14), // Quarta-feira de Cinzas (ponto facultativo até as 14h)
        new Date(year, 2, 8),  // Dia Internacional da Mulher
        new Date(year, 2, 29), // Sexta-feira Santa
        new Date(year, 2, 31), // Páscoa
        new Date(year, 3, 21), // Tiradentes
        new Date(year, 4, 1),  // Dia do Trabalho
        new Date(year, 4, 12), // Dia das Mães (segundo domingo de maio)
        new Date(year, 4, 30), // Corpus Christi
        new Date(year, 5, 31), // Ponto facultativo (dia seguinte ao Corpus Christi)
        new Date(year, 7, 11), // Dia dos Pais (segundo domingo de agosto)
        new Date(year, 8, 7),  // Independência do Brasil
        new Date(year, 9, 12), // Nossa Senhora Aparecida
        new Date(year, 9, 28), // Dia do Servidor Público
        new Date(year, 10, 1), // Dia de Todos os Santos
        new Date(year, 10, 2), // Finados
        new Date(year, 10, 15),// Proclamação da República
        new Date(year, 10, 20),// Dia Nacional da Consciência Negra
        new Date(year, 11, 24),// Véspera de Natal (ponto facultativo após as 14h)
        new Date(year, 11, 25),// Natal
        new Date(year, 11, 31) // Véspera de Ano-Novo (ponto facultativo após as 14h)
    ].map(date => date.toISOString().slice(0, 10).split('-').reverse().join('/'));  
}


    document.addEventListener('DOMContentLoaded', function() {
        const calendarBody = document.getElementById('calendar-body');
        const monthYear = document.getElementById('month-year');
        const prevMonthButton = document.getElementById('prev-month');
        const nextMonthButton = document.getElementById('next-month');
        let currentYear = new Date().getFullYear();
        let currentMonth = new Date().getMonth();
        let today = new Date();
        let holidays = getHolidays(currentYear);
        let selectedDate;

        function daysInMonth(year, month) {
            return new Date(year, month + 1, 0).getDate();
        }

        function updateCalendar() {
    calendarBody.innerHTML = '';
    const days = daysInMonth(currentYear, currentMonth);
    const firstDay = new Date(currentYear, currentMonth).getDay();

    let date = 1;
    for (let i = 0; i < 6; i++) {
        let row = document.createElement('tr');
        for (let j = 0; j < 7; j++) {
            let cell = document.createElement('td');
            let currentDate = new Date(currentYear, currentMonth, date);
            let dateString = currentDate.toISOString().slice(0, 10).split('-').reverse().join('/');

            if (i === 0 && j < firstDay || date > days) { 
                cell.appendChild(document.createTextNode(''));
                cell.classList.add('dia-bugado'); 
            } else {
                cell.appendChild(document.createTextNode(date));
                if (j === 0 || j === 6 || holidays.includes(dateString) || (currentDate < today && currentDate.toDateString() !== today.toDateString())) {
                    cell.classList.add('disabled-day');
                } else {
                    cell.addEventListener('click', function() {
                        if (selectedDate) {
                            selectedDate.classList.remove('selected-day');
                        }
                        selectedDate = cell;
                        selectedDate.classList.add('selected-day');
                        document.getElementById('appointment-date').value = dateString;
                        const selectedBarberId = document.getElementById('employee').value;
                        updateAvailableTimes(dateString, selectedBarberId); // Passa o ID do barbeiro selecionado
                    });
                }
                date++;
            }
            row.appendChild(cell);
        }
        calendarBody.appendChild(row);
    }
    monthYear.textContent = `${String(currentMonth + 1).padStart(2, '0')}/${currentYear}`;
    prevMonthButton.disabled = (currentYear <= today.getFullYear() && currentMonth <= today.getMonth());
}

        prevMonthButton.addEventListener('click', () => {
            if (currentMonth > 0) {
                currentMonth--;
            } else {
                currentMonth = 11;
                currentYear--;
            }
            updateCalendar();
        });

        nextMonthButton.addEventListener('click', function(event) {
            event.stopPropagation();
            currentMonth++;
            if (currentMonth > 11) {
                currentMonth = 0;
                currentYear++;
            }
            updateCalendar();
        });

        function showLoadingIndicator() {
            document.getElementById('loading-indicator').style.display = 'block';
        }

        function hideLoadingIndicator() {
            document.getElementById('loading-indicator').style.display = 'none';
        }

        async function updateAvailableTimes(date, barbeiroId) {
    showLoadingIndicator();
    const response = await fetch(`/horarios-disponiveis?date=${date.split('/').reverse().join('-')}&barbeiroId=${barbeiroId}`);
    const times = await response.json();
    const timeOptionsSelect = document.getElementById('time-options');
    timeOptionsSelect.innerHTML = '';
    times.forEach(time => {
        const option = document.createElement('option');
        option.value = time;
        option.textContent = time;
        timeOptionsSelect.appendChild(option);
    });
    hideLoadingIndicator();
}


        updateCalendar();
    });
</script>
<script>
    document.querySelector('form').addEventListener('submit', function(event) {
        const date = document.getElementById('appointment-date').value;
        const time = document.getElementById('time-options').value;
        if (date && time) {
            const dateTime = date + 'T' + time; // Formato ISO 8601
            document.getElementById('appointment-datetime').value = dateTime;
        } else {
            event.preventDefault(); // Impedir envio do formulário caso data ou hora não estejam selecionados
            alert('Por favor, selecione data e horário.');
        }
    });
</script>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const menuButton = document.getElementById('menu-button');
        const topo = document.querySelector('.topo');

        menuButton.addEventListener('click', function() {
            topo.classList.toggle('active');
        });
    });
</script>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const backToHomeButton = document.getElementById('back-to-home');
        backToHomeButton.addEventListener('click', function() {
            window.location.href = '/';
        });
    });
</script>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const scheduleButton = document.getElementById('schedule-button');
    const modal = document.getElementById('confirmation-modal');
    const closeModal = document.querySelector('.modal .close');
    const confirmButton = document.getElementById('confirm-button');
    const cancelButton = document.getElementById('cancel-button');
    const form = document.querySelector('form');

    scheduleButton.addEventListener('click', function(event) {
        const date = document.getElementById('appointment-date').value;
        const time = document.getElementById('time-options').value;
        const barber = document.getElementById('employee').options[document.getElementById('employee').selectedIndex].text;
        const service = document.getElementById('service').options[document.getElementById('service').selectedIndex].text;

        if (!date || !time) {
            alert('Por favor, selecione uma data e hora primeiro.');
            window.location.href = '/agenda';
        } else {
            event.preventDefault();
            modal.style.display = 'block';
            document.getElementById('selected-barber').innerText = barber;
            document.getElementById('selected-service').innerText = service;
            document.getElementById('selected-date').innerText = date;
            document.getElementById('selected-time').innerText = time;
        }
    });

    // Fecha o modal quando o botão de fechar é clicado
    closeModal.addEventListener('click', function() {
        modal.style.display = 'none';
    });

    // Envia o formulário quando o botão "Confirmar" é clicado
    confirmButton.addEventListener('click', function() {
        form.submit();
    });

    // Fecha o modal quando o botão "Cancelar" é clicado
    cancelButton.addEventListener('click', function(event) {
        event.preventDefault();
        modal.style.display = 'none';
    });

    // Fecha o modal se o usuário clicar fora do modal
    window.addEventListener('click', function(event) {
        if (event.target == modal) {
            modal.style.display = 'none';
        }
    });

    // Valida o formulário antes de enviar
    form.addEventListener('submit', function(event) {
        const date = document.getElementById('appointment-date').value;
        const time = document.getElementById('time-options').value;
        if (date && time) {
            const dateTime = date.split('/').reverse().join('-') + 'T' + time;
            document.getElementById('appointment-datetime').value = dateTime;
        } else {
            event.preventDefault();
            alert('Por favor, selecione data e horário.');
        }
    });
});

    </script>   
</body>
</html>
